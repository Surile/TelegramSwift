<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "Control.removeLastStateHandler() -&gt; ():Control.swift">
         <PersistentStrings>
            <PersistentString
               value = "stateHandlers">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Layer.willChangeValue(forKey : String) -&gt; ():Layer.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.superlayer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListMessageRowItem.stableId.getter:ChatListMessageRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "TitledBarView.draw(CALayer, in : CGContext) -&gt; ():TitledBarView.swift">
      </ContextState>
      <ContextState
         contextName = "ChatTextInputState.init(decoder : Decoder) -&gt; ChatTextInputState:ChatInterfaceState.swift">
      </ContextState>
      <ContextState
         contextName = "EditableViewController.state.didset:EditableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "state">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GridItem.resize(size : CGSize) -&gt; ():GridRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "originalSize.aspectFilled(size)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "-[AudioRecorder setupAudioUnits]:AudioRecorder.m">
         <PersistentStrings>
            <PersistentString
               value = "_inputFormat">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MessageHistoryTable.addMessages([StoreMessage], location : AddMessagesLocation, operationsByPeerId : inout [PeerId : [MessageHistoryOperation]], unsentMessageOperations : inout [IntermediateMessageHistoryUnsentOperation], updatedPeerReadStateOperations : inout [PeerId : PeerReadStateSynchronizationOperation?]) -&gt; [Int64 : MessageId]:MessageHistoryTable.swift">
      </ContextState>
      <ContextState
         contextName = "PeerMediaMusicRowItem.init(CGSize, ChatInteraction, Account, PeerMediaSharedEntry) -&gt; PeerMediaMusicRowItem:PeerMediaMusicRowContent.swift">
      </ContextState>
      <ContextState
         contextName = "ChatInterfaceState.encode(Encoder) -&gt; ():ChatInterfaceState.swift">
         <PersistentStrings>
            <PersistentString
               value = "forwardMessageIds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChannelTypeSettingsViewController.privateEntries(with : CreateChannelResult) -&gt; [ChannelTypeEntry]:ChannelTypeSettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "VideoMessageCorner.draw(_:in:):ChatVideoMessageContentView.swift">
         <PersistentStrings>
            <PersistentString
               value = "bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized ChatListController.(loadOnScroll(Account, TGTableScrollUpdate) -&gt; ()).(closure #1).(closure #1).(closure #1):ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "chatListView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TextView.update(TextViewLayout) -&gt; ():TextView.swift">
      </ContextState>
      <ContextState
         contextName = "(preparedTableTransaction(from : ChatHistoryView?, to : ChatHistoryView, account : Account, table : TableView, interaction : ChatInteraction, animated : Bool, scrollPosition : ChatHistoryViewScrollPosition?, reason : ChatHistoryViewTransitionReason) -&gt; Signal&lt;ChatTableTransaction, ()&gt;).(closure #1):ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "removed">
            </PersistentString>
            <PersistentString
               value = "inserted">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SearchController.(loadView() -&gt; ()).(closure #3):SearchController.swift">
      </ContextState>
      <ContextState
         contextName = "PendingMessageManager.(updatePendingMessageIndices(Set&lt;MessageIndex&gt;) -&gt; ()).(closure #1):PendingMessageManager.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.change(state : ViewControllerState) -&gt; ():ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Control.updateState() -&gt; ():Control.swift">
      </ContextState>
      <ContextState
         contextName = "ChatServiceItem.height.getter:ChatServiceItem.swift">
      </ContextState>
      <ContextState
         contextName = "ImageView.image.didset:ImageView.swift">
         <PersistentStrings>
            <PersistentString
               value = "image">
            </PersistentString>
            <PersistentString
               value = "self.layer">
            </PersistentString>
            <PersistentString
               value = "self.layer?.bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TextAndLabelItem.height.getter:TextAndLabelItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "labelLayout?.0.size.height">
            </PersistentString>
            <PersistentString
               value = "textLayout.size.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavigationViewController.back(Int) -&gt; ():NavigationViewController.swift">
      </ContextState>
      <ContextState
         contextName = "(preparedTableTransaction(from : ChatHistoryView?, to : ChatHistoryView, account : Account, initialSize : CGSize, interaction : ChatInteraction, animated : Bool, scrollPosition : ChatHistoryViewScrollPosition?, reason : ChatHistoryViewUpdateType, animationInterface : TableAnimationInterface) -&gt; Signal&lt;TableUpdateTransition, ()&gt;).(closure #1):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatServiceItem.init(CGSize, ChatInteraction, Account, ChatHistoryEntry) -&gt; ChatServiceItem:ChatServiceItem.swift">
      </ContextState>
      <ContextState
         contextName = "TextViewLayout.calculateLayout() -&gt; ():TextView.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(viewDidLoad() -&gt; ()).(closure #38).(closure #1):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "NavigationHeader.hide(Bool) -&gt; ():NavigationViewController.swift">
      </ContextState>
      <ContextState
         contextName = "GIFPlayerView.(set(path : String?) -&gt; ()).(closure #2):GIFPlayerView.swift">
         <PersistentStrings>
            <PersistentString
               value = "layer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.insert(item : TableRowItem, at : Int, redraw : Bool, animation : NSTableViewAnimationOptions) -&gt; Bool:TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.item(stableId:item.stableId)">
            </PersistentString>
            <PersistentString
               value = "self.item(stableId:item.stableId) as? ShortPeerRowItem">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ExpandedPreviewRowItem.init(CGSize, account : Account, url : URL, onDelete : (ExpandedPreviewRowItem) -&gt; ()) -&gt; ExpandedPreviewRowItem:PreviewSenderItems.swift">
      </ContextState>
      <ContextState
         contextName = "TitleButton.apply(state : ControlState) -&gt; ():TitleButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "style.font">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadView() -&gt; ()).(closure #8).(closure #2):ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "t">
            </PersistentString>
            <PersistentString
               value = "transition">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "InputContextHelper.(entries(for : ChatPresentationInputQueryResult?) -&gt; Signal&lt;[InputContextEntry], ()&gt;).(closure #1):InputContextHelper.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRowView.mouseDown(with : NSEvent) -&gt; ():ChatRowView.swift">
      </ContextState>
      <ContextState
         contextName = "ShareMessageObject.init(Account, Message) -&gt; ShareMessageObject:ShareModalController.swift">
      </ContextState>
      <ContextState
         contextName = "Control.controlState.didset:Control.swift">
         <PersistentStrings>
            <PersistentString
               value = "controlState">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(prepareEntries(from : ChatHistoryView?, to : ChatHistoryView, account : Account, initialSize : CGSize, interaction : ChatInteraction, animated : Bool, scrollPosition : ChatHistoryViewScrollPosition?, reason : ChatHistoryViewUpdateType, animationInterface : TableAnimationInterface) -&gt; Signal&lt;TableUpdateTransition, ()&gt;).(closure #1):ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "entries">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatMediaView.setItem(item : TGTableRowItem, selected : Bool) -&gt; ():ChatMediaView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.contentNode!.content">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(prepareEntries(from : [ChannelTypeEntry], to : [ChannelTypeEntry], account : Account, initialSize : CGSize, animated : Bool, typeHandler : (ChannelType) -&gt; ()) -&gt; Signal&lt;TableUpdateTransition, ()&gt;).(closure #1).(closure #1):ChannelTypeSettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatInteraction.init() -&gt; ChatInteraction:ChatInterfaceInteraction.swift">
      </ContextState>
      <ContextState
         contextName = "APChatController.(start() -&gt; ()).(closure #4):AudioPlayerController.swift">
      </ContextState>
      <ContextState
         contextName = "PeerMediaGridController.(enqueueHistoryViewTransition(ChatHistoryGridTransition) -&gt; Signal&lt;(), ()&gt;).(closure #1):PeerMediaGridController.swift">
         <PersistentStrings>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #20 in ChatController.viewDidLoad():ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "CalendarMonthView.layout() -&gt; ():CalendarMonthController.swift">
         <PersistentStrings>
            <PersistentString
               value = "subviews[i]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "+[ObjcUtils notificationTones:]:ObjcUtils.m">
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadView() -&gt; ()).(closure #1).(closure #2).(closure #1):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "ScrollView.scrollPosition.getter:ScrollView.swift">
         <PersistentStrings>
            <PersistentString
               value = "currentpos">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatController.scrollToLatest() -&gt; ():ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "previousView.modify({$0})?.originalView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LinearProgressControl.set(progress : CGFloat, animated : Bool) -&gt; ():LinearProgressControl.swift">
         <PersistentStrings>
            <PersistentString
               value = "progressView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(chatMessagePhotoDatas(account : Account, photo : TelegramMediaImage) -&gt; Signal&lt;(Data?, Data?, Int), ()&gt;).(closure #1):MediaUtils.swift">
         <PersistentStrings>
            <PersistentString
               value = "photo">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatMediaItem.init(Account, ChatHistoryEntry) -&gt; ChatMediaItem:ChatMediaItem.swift">
      </ContextState>
      <ContextState
         contextName = "MutablePeerView.replay(updatedPeers : [PeerId : Peer], updatedNotificationSettings : [PeerId : PeerNotificationSettings], updatedCachedPeerData : [PeerId : CachedPeerData], updatedPeerPresences : [PeerId : PeerPresence], replaceContactPeerIds : Set&lt;PeerId&gt;?, getPeer : (PeerId) -&gt; Peer?, getPeerPresence : (PeerId) -&gt; PeerPresence?) -&gt; Bool:PeerView.swift">
         <PersistentStrings>
            <PersistentString
               value = "updatedCachedPeerData[self.peerId]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatVoiceRowItem.init(CGSize, ChatInteraction, Account, ChatHistoryEntry) -&gt; ChatVoiceRowItem:ChatVoiceRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "object.message">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatTableTransaction.init(deleted : [Int], inserted : [(Int, TableRowItem, Int?)], animated : Bool, scrollState : TableScrollState, reason : ChatHistoryViewTransitionReason, historyView : ChatHistoryView) -&gt; ChatTableTransaction:ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.merge([Int], [(Int, ChatListRowItem, Int?)]) -&gt; ():ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "(preparedTableTransaction(from : ChatHistoryView?, to : ChatHistoryView, account : Account, initialSize : CGSize, interaction : ChatInteraction, animated : Bool, scrollPosition : ChatHistoryViewScrollPosition?, reason : ChatHistoryViewUpdateType, animationInterface : TableAnimationInterface) -&gt; Signal&lt;ChatTableTransaction, ()&gt;).(closure #1):ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "toView.filteredEntries">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static ChatRowItem.item(from : ChatHistoryEntry, with : Account) -&gt; ChatRowItem:ChatRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "message.media">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(chatMessagePhotoDatas(account : Account, photo : TelegramMediaImage) -&gt; Signal&lt;(Data?, Data?, Int), ()&gt;).(closure #1).(closure #3).(closure #1):MediaUtils.swift">
      </ContextState>
      <ContextState
         contextName = "PeerMediaWebpageRowItem.init(CGSize, ChatInteraction, Account, PeerMediaSharedEntry) -&gt; PeerMediaWebpageRowItem:PeerMediaWebpageRowContent.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.message">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AccountStateManager.(startFirstOperation() -&gt; ()).(closure #6):AccountStateManager.swift">
      </ContextState>
      <ContextState
         contextName = "UnsentMessageHistoryView.replay([IntermediateMessageHistoryUnsentOperation]) -&gt; Bool:UnsentMessageHistoryView.swift">
      </ContextState>
      <ContextState
         contextName = "TitledBarView.text.didset:TitledBarView.swift">
         <PersistentStrings>
            <PersistentString
               value = "text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadView() -&gt; ()).(closure #7):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "EBlockRowView.update(with : CGPoint) -&gt; Bool:EBlockRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.lineAttr">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatVoiceContentView.draw(CALayer, in : CGContext) -&gt; ():ChatVoiceContentView.swift">
      </ContextState>
      <ContextState
         contextName = "proccessEntries&lt;A, B where ...&gt; ([B]?, right : [B], (B) -&gt; A) -&gt; ([Int], [(Int, A, Int?)]):System.swift">
      </ContextState>
      <ContextState
         contextName = "TableView.merge(with:):TableView.swift">
      </ContextState>
      <ContextState
         contextName = "GeneralTextRowView.set(item : TableRowItem, animated : Bool) -&gt; ():GeneralTextRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "GridTableView.refill() -&gt; [GridRowItem]:GridTableView.swift">
      </ContextState>
      <ContextState
         contextName = "ContextMediaRowItem.init(CGSize, ChatContextResultCollection, InputMediaContextRow, Int64, Account, ChatInteraction) -&gt; ContextMediaRowItem:ContextMediaRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "fitPrettyDimensions([CGSize], perSize : CGSize) -&gt; [[CGSize]]:PrettyGridUtils.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(openChat(account : Account, peerId : PeerId, location : ChatHistoryLocation, tagMask : MessageTags?) -&gt; ()).(closure #2):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadOnScroll(Account, TGTableScrollUpdate) -&gt; ()).(closure #1).(closure #1):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "InAppNotificationSettings.init(decoder : Decoder) -&gt; InAppNotificationSettings:InAppNotificationSettings.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.updateNavigation(NavigationViewController?) -&gt; ():ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "centerBarView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.replace(item : TableRowItem, at : Int, animated : Bool) -&gt; ():TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "list">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "__105-[MTProto transportReadyForTransaction:transportSpecificTransaction:forceConfirmations:transactionReady:]_block_invoke:MTProto.m">
      </ContextState>
      <ContextState
         contextName = "TableView.item(stableId : AnyHashable) -&gt; TableRowItem?:TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "stableId">
            </PersistentString>
            <PersistentString
               value = "self.listhash">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GridTableView.apply(transition : GridTransition) -&gt; ():GridTableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.stableId">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "groupInfoEntries(view : PeerView) -&gt; [PeerInfoEntry]:GroupInfoEntries.swift">
      </ContextState>
      <ContextState
         contextName = "MediaBox.(fetchedResource(MediaResource) -&gt; Signal&lt;(), ()&gt;).(closure #1).(closure #1).(closure #5).(closure #1):MediaBox.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.loadOnScroll(Account, TGTableScrollUpdate) -&gt; ():ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "TGDialogRowView.setItem(item : TGTableRowItem, selected : Bool) -&gt; ():TGDialogRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "ditem.displayName">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GridNode.transaction(GridNodeTransaction, completion : (GridNodeDisplayedItemRange) -&gt; ()) -&gt; ():GridNode.swift">
      </ContextState>
      <ContextState
         contextName = "EntertainmentViewController.changeControllers(EntertainmentState, animated : Bool) -&gt; ():EntertainmentViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "current">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.change(size : CGSize, animated : Bool, Bool) -&gt; ():TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(finalStateWithUpdates(account : Account, state : AccountMutableState, updates : [Api.Update], shouldPoll : Bool, missingUpdates : Bool) -&gt; Signal&lt;AccountFinalState, ()&gt;).(closure #9):AccountStateManagementUtils.swift">
         <PersistentStrings>
            <PersistentString
               value = "update">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GroupInfoEntry.sortIndex.getter:GroupInfoEntries.swift">
         <PersistentStrings>
            <PersistentString
               value = "(id + 1) * 1000 - id">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatPresentationInterfaceState.state.getter:ChatPresentationInterfaceState.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.historyCount">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TabBarView.setSelectedIndex(Int, respondToDelegate : Bool) -&gt; ():TabBarView.swift">
         <PersistentStrings>
            <PersistentString
               value = "selectView.subviews">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppearanceViewEntries(dark:settings:):AppearanceViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatInputActionsView.(stop() -&gt; ()).(closure #1):ChatInputActionsView.swift">
      </ContextState>
      <ContextState
         contextName = "SearchView.changeResponder(Bool) -&gt; Bool:SearchView.swift">
         <PersistentStrings>
            <PersistentString
               value = "state">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.insertItems([(Int, ChatListEntry, Int?)]) -&gt; ():ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatServiceRowView.set(item : TableRowItem, animated : Bool) -&gt; ():ChatServiceRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.account">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(channelMembers(account : Account, peerId : PeerId, filter : ChannelMembersFilter) -&gt; Signal&lt;[RenderedChannelParticipant], ()&gt;).(closure #1).(closure #1):ChannelMembers.swift">
      </ContextState>
      <ContextState
         contextName = "Network.(request&lt;A&gt; ((CustomStringConvertible, Buffer, (Buffer) -&gt; A?), tag : NetworkRequestDependencyTag?, automaticFloodWait : Bool) -&gt; Signal&lt;A, MTRpcError&gt;).(closure #1):Network.swift">
      </ContextState>
      <ContextState
         contextName = "MediaBox.(fetchedResource(MediaResource) -&gt; Signal&lt;(), ()&gt;).(closure #1).(closure #1):MediaBox.swift">
      </ContextState>
      <ContextState
         contextName = "SearchResultModalController.(viewDidLoad() -&gt; ()).(closure #1):SearchResultModalController.swift">
      </ContextState>
      <ContextState
         contextName = "historyEntriesForView(MessageHistoryView, Bool) -&gt; [ChatHistoryEntry]:System.swift">
      </ContextState>
      <ContextState
         contextName = "closure #5 in SearchController.viewDidLoad():SearchController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadView() -&gt; ()).(closure #9):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "ValuePipe.putNext(A) -&gt; ():ValuePipe.swift">
      </ContextState>
      <ContextState
         contextName = "ChatServiceItem.init(TableView, ChatInteraction, Account, ChatHistoryEntry) -&gt; ChatServiceItem:ChatServiceItem.swift">
      </ContextState>
      <ContextState
         contextName = "ViewController.(viewDidAppear(Bool) -&gt; ()).(closure #1):ViewController.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #2 in transformOutgoingMessageMedia(postbox:network:media:opportunistic:):TransformOutgoingMessageMedia.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.rightSize.getter:ChatRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "SuggestionLocalizationViewController.viewDidLoad() -&gt; ():SuggestionLocalizationViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ImageView.viewDidChangeBackingProperties() -&gt; ():ImageView.swift">
         <PersistentStrings>
            <PersistentString
               value = "window.backingScaleFactor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "legacyAuthData(passcodeData : Data) -&gt; NSDictionary?:LegacyImportAuthorization.swift">
      </ContextState>
      <ContextState
         contextName = "UsernameInputRowView.set(item : TableRowItem, animated : Bool) -&gt; ():UsernameInputRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "WPArticleLayout.isFullImageSize.getter:WPArticleLayout.swift">
         <PersistentStrings>
            <PersistentString
               value = "content">
            </PersistentString>
            <PersistentString
               value = "content.type">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatInputView.defaultContentHeight.getter:ChatInputView.swift">
         <PersistentStrings>
            <PersistentString
               value = "chatState == .normal">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(channelMembersEntries([RenderedChannelParticipant], users : [TemporaryPeer]?, remote : [TemporaryPeer], account : Account, isLoading : Bool) -&gt; [SelectPeerEntry]).(closure #1):SelectPeersController.swift">
         <PersistentStrings>
            <PersistentString
               value = "result">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShareModalController.(viewDidLoad() -&gt; ()).(closure #4):ShareModalController.swift">
      </ContextState>
      <ContextState
         contextName = "TableView.merge(with : TableUpdateTransition) -&gt; ():TableView.swift">
      </ContextState>
      <ContextState
         contextName = "TitleButton.sizeToFit(CGSize, CGSize) -&gt; ():TitleButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.text.string">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MGalleryPhotoItem.init(Account, ChatHistoryEntry, CGSize) -&gt; MGalleryPhotoItem:MGalleryPhotoItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "entry.message!.media">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UsernameInputRowItem.init(CGSize, stableId : AnyHashable, placeholder : String, limit : Int32, state : UsernameAvailabilityState, changeHandler : (String) -&gt; (), holdText : Bool) -&gt; UsernameInputRowItem:UsernameInputRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "current">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TitleButton.sizeToFit(CGSize) -&gt; ():TitleButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.text.string">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.merge([Int], [(Int, TableRowItem, Int?)], Bool, TableScrollState, Bool) -&gt; ():TableView.swift">
      </ContextState>
      <ContextState
         contextName = "ChannelTypeSettingsViewController.publicEntries(with : CreateChannelResult, availability : UsernameAvailabilityState) -&gt; [ChannelTypeEntry]:ChannelTypeSettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "GalleryPagerNode.currentNode.setter:GalleryPagerNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "newValue.view">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.merge([Int], [(Int, TableRowItem, Int?)], Bool, TableScrollState) -&gt; ():TableView.swift">
      </ContextState>
      <ContextState
         contextName = "ReplyModel.draw(CALayer, in : CGContext) -&gt; ():ReplyModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "layer.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.(init(Account) -&gt; ChatListController).(closure #1):ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self?.tableView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationSettingsViewController.(viewDidLoad() -&gt; ()).(closure #2):NotificationSettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "PendingMessageManager.(updatePendingMessageIds(Set&lt;MessageId&gt;) -&gt; ()).(closure #1):PendingMessageManager.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.(startWithAccount(Account, messagesProtocol : TGMessagesProtocol) -&gt; ()).(closure #1):ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "insertItems">
            </PersistentString>
            <PersistentString
               value = "removedItems">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #6 in searchMessages(account:peerId:query:fromId:tagMask:):SearchMessages.swift">
         <PersistentStrings>
            <PersistentString
               value = "result">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatController.(init(account : Account, peerId : PeerId, message : Message?, navigation : NavigationViewController) -&gt; ChatController).(closure #4):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "BadgeNode.draw(CALayer, in : CGContext) -&gt; ():BadgeNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "layer.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListRowItem.init(TableView, Account, Message, CombinedPeerReadState?, PeerNotificationSettings?) -&gt; ChatListRowItem:ChatListRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "NavigationHeader.navigation.didset:NavigationViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "navigation">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChannelTypeSettingsViewController.restart(with : ComposeState&lt;CreateChannelResult&gt;) -&gt; ():ChannelTypeSettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ViewTracker.(unsentMessageIdsViewSignal() -&gt; Signal&lt;UnsentMessageIdsView, ()&gt;).(closure #1).(closure #1).(closure #1):ViewTracker.swift">
      </ContextState>
      <ContextState
         contextName = "MessageHistoryTable.internalStoreMessages([StoreMessage]) -&gt; [InternalStoreMessage]:MessageHistoryTable.swift">
      </ContextState>
      <ContextState
         contextName = "InputContextViewController.layout(Bool) -&gt; ():InputContextHelper.swift">
         <PersistentStrings>
            <PersistentString
               value = "view">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatMapContentView.update(with : Media, size : CGSize, account : Account, parent : Message?, table : TableView?, parameters : ChatMediaLayoutParameters?) -&gt; ():ChatMapContentView.swift">
         <PersistentStrings>
            <PersistentString
               value = "updated">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Bag.remove(Int) -&gt; ():Bag.swift">
      </ContextState>
      <ContextState
         contextName = "Node.loadIfNeeded() -&gt; ():Node.swift">
      </ContextState>
      <ContextState
         contextName = "(updatePinnedMessage(MessageId?, for : PeerId, account : Account) -&gt; Signal&lt;(), UpdatePinnedMessageError&gt;).(closure #3).(closure #1):UpdatePinnedMessage.swift">
      </ContextState>
      <ContextState
         contextName = "Window.remove(object : NSObject, for : KeyboardKey) -&gt; ():Window.swift">
         <PersistentStrings>
            <PersistentString
               value = "keyHandlers[key]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MediaBox.(fetchedResource(MediaResource) -&gt; Signal&lt;(), ()&gt;).(closure #1).(closure #1).(closure #4).(closure #1):MediaBox.swift">
      </ContextState>
      <ContextState
         contextName = "PeerInfoController.(loadView() -&gt; ()).(closure #2):PeerInfoController.swift">
         <PersistentStrings>
            <PersistentString
               value = "table.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MessageHistoryView.init(_:):MessageHistoryView.swift">
      </ContextState>
      <ContextState
         contextName = "static ChatRowItem.item(TableView, from : ChatHistoryEntry, with : Account, interaction : ChatInteraction) -&gt; ChatRowItem:ChatRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "message.media[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "APSongItem.init(_:_:):AudioPlayerController.swift">
      </ContextState>
      <ContextState
         contextName = "TabBarView.draw(CALayer, in : CGContext) -&gt; ():TabBarView.swift">
         <PersistentStrings>
            <PersistentString
               value = "layer.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatInputActionsView.stop(Bool) -&gt; ():ChatInputActionsView.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(openChat(account : Account, peerId : PeerId, location : ChatHistoryLocation, tagMask : MessageTags?) -&gt; ()).(closure #9):ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "strongSelf.centerBarView">
            </PersistentString>
            <PersistentString
               value = "(strongSelf.centerBarView as? TitledBarView)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SearchController.(loadView() -&gt; ()).(closure #1).(closure #3):SearchController.swift">
      </ContextState>
      <ContextState
         contextName = "static TGTextField.getlayout(attributedString : NSAttributedString?, maximumNumberOfLines : Int, truncationType : CTLineTruncationType, backgroundColor : NSColor?, constrainedSize : CGSize, cutout : TextNodeCutout?) -&gt; TextNodeLayout:TGTextField.swift">
      </ContextState>
      <ContextState
         contextName = "(chatMessagePhotoDatas(account : Account, photo : TelegramMediaImage) -&gt; Signal&lt;(Data?, Data?, Int), ()&gt;).(closure #1).(closure #2):MediaUtils.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.init(TableView, ChatInteraction, Account, ChatHistoryEntry) -&gt; ChatRowItem:ChatRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.(startWithAccount(Account, messagesProtocol : TGMessagesProtocol) -&gt; ()).(closure #1).(closure #1):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "SplitView.layout() -&gt; ():TGSplitView.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(viewDidLoad() -&gt; ()).(closure #21).(closure #1):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRowView.fillReplyIfNeeded(ReplyModel?, ChatRowItem) -&gt; ():ChatRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "reply.size.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "WArticleLayout.init(with : TelegramMediaWebpageLoadedContent, account : Account) -&gt; WArticleLayout:WArticleLayout.swift">
      </ContextState>
      <ContextState
         contextName = "(makeMediaEnties([ChatContextResult], initialSize : CGSize, itemSize : CGFloat) -&gt; [InputMediaContextEntry]).(fillRow #1)() -&gt; ():InputContextHelper.swift">
      </ContextState>
      <ContextState
         contextName = "(chatMessageSticker(account : Account, file : TelegramMediaFile, size : CGSize) -&gt; Signal&lt;CGImage?, ()&gt;).(closure #1).(closure #2):MediaUtils.swift">
         <PersistentStrings>
            <PersistentString
               value = "fullSizeImage.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatController.viewDidAppear(Bool) -&gt; ():ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "PeerMediaFileRowItem.makeSize(_:oldWidth:):PeerMediaFileRowContent.swift">
      </ContextState>
      <ContextState
         contextName = "GalleryPagerNode.animateIn(from : NSView?, completion : () -&gt; ()?) -&gt; ():GalleryPagerNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.superview.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.merge([Int], [(Int, TGTableRowItem, Int?)]) -&gt; ():ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "deleteIndexes">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GridRowItem.sizeToFit() -&gt; ():GridRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.width">
            </PersistentString>
            <PersistentString
               value = "prop * CGFloat(items.count) + fitInset">
            </PersistentString>
            <PersistentString
               value = "prop * 5">
            </PersistentString>
            <PersistentString
               value = "fitWidth">
            </PersistentString>
            <PersistentString
               value = "fitInset">
            </PersistentString>
            <PersistentString
               value = "inset">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.merge([Int], [(Int, ChatListRowItem)]) -&gt; ():ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "PeerInfoController.(init(account : Account, peerId : PeerId) -&gt; PeerInfoController).(closure #3):PeerInfoController.swift">
         <PersistentStrings>
            <PersistentString
               value = "strongSelf.navigationController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ExternalVideoLoader.(fetchYoutubeContent(for : String, image : TelegramMediaImage) -&gt; Signal&lt;ExternalVideo?, ()&gt;).(closure #1).(closure #1).(closure #1).(closure #1):ExternalVideoLoader.swift">
         <PersistentStrings>
            <PersistentString
               value = "video.streamURLs">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static ChatLayoutUtils.contentNode(for : Media) -&gt; ChatMediaContentView.Type:ChatLayoutUtils.swift">
      </ContextState>
      <ContextState
         contextName = "Window.remove(object : AnyObject, for : KeyboardKey) -&gt; ():Window.swift">
         <PersistentStrings>
            <PersistentString
               value = "copy[i].object.value">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListRowView.draw(CALayer, in : CGContext) -&gt; ():ChatListRowView.swift">
      </ContextState>
      <ContextState
         contextName = "(prepareEntries(from : ChatListView?, to : ChatListView, account : Account, initialSize : CGSize, animated : Bool) -&gt; Signal&lt;TableTransition, ()&gt;).(closure #1):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.openChat(account : Account, peerId : PeerId, message : Message?, tagMask : MessageTags?) -&gt; ():ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(viewDidLoad() -&gt; ()).(closure #4):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "ManagedAudioRecorderContext.start() -&gt; ():AudioRecorder.swift">
      </ContextState>
      <ContextState
         contextName = "TGImageByReferencingRectOfExistingImage:NSImage+RHResizableImageAdditions.m">
         <PersistentStrings>
            <PersistentString
               value = "image.representations">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.reloadData(row : Int) -&gt; ():TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.item(at: row)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GalleryControls.animateIn() -&gt; ():GalleryControls.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.init(_:_:_:_:):ChatRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(init(account : Account, peerId : PeerId, message : Message?, navigation : NavigationViewController) -&gt; ChatController).(closure #16):ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "interfaceState">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.menuItems():ChatRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "EditableViewController.update(with : ViewControllerState) -&gt; ():EditableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "editBar.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadView() -&gt; ()).(closure #1).(closure #2):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "MessageFileContentNode.(update(with : ChatMediaItem, size : CGSize, account : Account) -&gt; ()).(closure #3):MessageFileContentNode.swift">
      </ContextState>
      <ContextState
         contextName = "(chatMessagePhotoDatas(account : Account, photo : TelegramMediaImage) -&gt; Signal&lt;(Data?, Data?, Int), ()&gt;).(closure #1).(closure #1).(closure #1):MediaUtils.swift">
         <PersistentStrings>
            <PersistentString
               value = "smallestRepresentation">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.startAuthorization(UnauthorizedAccount) -&gt; ():AppDelegate.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.init(Account, ChatHistoryEntry) -&gt; ChatRowItem:ChatRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "ChannelTypeSettingsViewController.(restart(with : ComposeState&lt;CreateChannelResult&gt;) -&gt; ()).(closure #1):ChannelTypeSettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "TableView.change(size : CGSize, animated : Bool) -&gt; ():TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.bounds">
            </PersistentString>
            <PersistentString
               value = "">
            </PersistentString>
            <PersistentString
               value = "tableView.bounds">
            </PersistentString>
            <PersistentString
               value = "self.contentView.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TGTableView.remove(item : TGTableRowItem, redraw : Bool, animation : NSTableViewAnimationOptions) -&gt; ():TGTableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.list[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TGClipView.bounds.didset:TGClipView.swift">
         <PersistentStrings>
            <PersistentString
               value = "bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.height.getter:ChatRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.contentSize.height">
            </PersistentString>
            <PersistentString
               value = "_defaultHeight">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AccountStateManager.(startFirstOperation() -&gt; ()).(closure #12):AccountStateManager.swift">
      </ContextState>
      <ContextState
         contextName = "__34-[TGGrowingTextView menuForEvent:]_block_invoke:TGModernGrowingTextView.m">
      </ContextState>
      <ContextState
         contextName = "ViewTracker.(unsentMessageIdsViewSignal() -&gt; Signal&lt;UnsentMessageIdsView, ()&gt;).(closure #1).(closure #1).(closure #2).(closure #1):ViewTracker.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.unsendMessageIdsViewSubscribers">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.init(frame : CGRect, isFlipped : Bool) -&gt; TableView:TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.layer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatRowView.draw(CALayer, in : CGContext) -&gt; ():ChatRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.item">
            </PersistentString>
            <PersistentString
               value = "author.0.size">
            </PersistentString>
            <PersistentString
               value = "item.messageSize">
            </PersistentString>
            <PersistentString
               value = "titleLayout.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationSettingsViewController.(prepareEntries(from : NotificationsSettingsList?, to : NotificationsSettingsList, account : Account, interactions : NotificationSettingsInteractions, searchInteractions : SearchInteractions, initialSize : CGSize, animated : Bool) -&gt; Signal&lt;TableUpdateTransition, ()&gt;).(closure #1).(closure #1).(closure #5):NotificationSettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRightView.draw(CALayer, in : CGContext) -&gt; ():ChatRightView.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #3 in searchPeers(account:query:):SearchPeers.swift">
         <PersistentStrings>
            <PersistentString
               value = "result">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UpdateMessageService.mtProto(MTProto!, receivedMessage : MTIncomingMessage!) -&gt; ():UpdateMessageService.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(openChat(account : Account, peerId : PeerId, message : Message?, action : NavigationModalAction?) -&gt; ()).(closure #15):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "ImageView.draw(CALayer, in : CGContext) -&gt; ():ImageView.swift">
         <PersistentStrings>
            <PersistentString
               value = "layer.contents">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GeneralRowView.changeBackground(color : NSColor) -&gt; ():GeneralRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.layer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewTracker.unsentViewUpdated() -&gt; ():ViewTracker.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadView() -&gt; ()).(closure #1):ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollPosition">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "_NSLocalizedString(_:):LocalizableExtension.swift">
         <PersistentStrings>
            <PersistentString
               value = "language.strings">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.(init(CGSize, ChatInteraction, Account, ChatHistoryEntry) -&gt; ChatRowItem).(closure #1):ChatRowItem.swift">
      </ContextState>
      <ContextState
         contextName = "ChatRowItem.makeSize(CGFloat) -&gt; Bool:ChatRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.messageSize">
            </PersistentString>
            <PersistentString
               value = "_contentSize">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavigationViewController.show(ViewController, ViewControllerStyle) -&gt; ():NavigationViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "pto">
            </PersistentString>
            <PersistentString
               value = "controller.bar.height">
            </PersistentString>
            <PersistentString
               value = "controller.view.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Popover.hide() -&gt; ():Popover.swift">
      </ContextState>
      <ContextState
         contextName = "PassportController.viewDidLoad():PassportController.swift">
         <PersistentStrings>
            <PersistentString
               value = "errors">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatRowView.setItem(item : TGTableRowItem, selected : Bool) -&gt; ():ChatRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.contentOffset">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "shortStatus(for : Peer, with : CachedPeerData?) -&gt; (String, NSColor):System.swift">
      </ContextState>
      <ContextState
         contextName = "legacyAuthData(passcode : Data) -&gt; AuthorizationLegacyData:LegacyImportAuthorization.swift">
      </ContextState>
      <ContextState
         contextName = "GalleryPagerNode.animateIn(from : (Int64) -&gt; NSView?, completion : () -&gt; ()?) -&gt; ():GalleryPagerNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GeneralInputRowView.set(item : TableRowItem, animated : Bool) -&gt; ():GeneralInputRow.swift">
      </ContextState>
      <ContextState
         contextName = "stringStatus(for : PeerView, theme : PeerStatusStringTheme) -&gt; PeerStatusStringResult:TextUtils.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.loadChat(account : Account, peerId : PeerId, message : Message?) -&gt; ():ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "-[TGModernGrowingTextView textDidChange:]:TGModernGrowingTextView.m">
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadView() -&gt; ()).(closure #8):ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "previousChatList">
            </PersistentString>
            <PersistentString
               value = "previousChatList.modify({$0})">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListRowItem.makeSize(CGFloat, oldWidth : CGFloat) -&gt; Bool:ChatListRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "messageText.string">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TGMessageRowItem.makeSize(CGFloat) -&gt; Bool:TGMessageRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "_height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized ChatListController.(loadOnScroll(Account, TGTableScrollUpdate) -&gt; ()).(closure #1).(closure #1):ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "ChatInputAdditions.frame.setter:ChatInputAdditions.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.container.frame">
            </PersistentString>
            <PersistentString
               value = "self.view">
            </PersistentString>
            <PersistentString
               value = "self.view.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MajorNavigationController.back(Int) -&gt; ():MajorNavigationController.swift">
      </ContextState>
      <ContextState
         contextName = "NavigationViewController.empty.didset:NavigationViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "stack">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(makeMediaEnties([ChatContextResult], initialSize : CGSize, maxHeight : CGFloat) -&gt; [InputMediaContextEntry]).(fillRow #1)() -&gt; ():PrettyGridUtils.swift">
      </ContextState>
      <ContextState
         contextName = "TableAnimationInterface.animate(added : [TableRowItem], removed : [TableRowItem]) -&gt; ():TableAnimationInterface.swift">
         <PersistentStrings>
            <PersistentString
               value = "table.bounds">
            </PersistentString>
            <PersistentString
               value = "table.documentView.bounds">
            </PersistentString>
            <PersistentString
               value = "table.contentView.bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "parseTextEntities(String) -&gt; (String, [MessageTextEntity]):TextUtils.swift">
      </ContextState>
      <ContextState
         contextName = "Window.set(handler : () -&gt; (), with : AnyObject, for : KeyboardKey, priority : HandlerPriority, modifierFlags : NSEventModifierFlags?) -&gt; ():Window.swift">
      </ContextState>
      <ContextState
         contextName = "closure #3 in searchPeers(account:query:):SearchPeers.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.(viewDidLoad() -&gt; ()).(closure #38):ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "strongSelf.chatInteraction.presentation">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Popover.show(for : NSView, edge : NSRectEdge) -&gt; ():Popover.swift">
      </ContextState>
      <ContextState
         contextName = "TGTableView.(viewDidMoveToSuperview() -&gt; ()).(closure #1):TGTableView.swift">
      </ContextState>
      <ContextState
         contextName = "CGImage.backingSize.getter:Extensions.swift">
         <PersistentStrings>
            <PersistentString
               value = "width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GalleryViewer.show() -&gt; ():GalleryViewer.swift">
         <PersistentStrings>
            <PersistentString
               value = "pager.currentNode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatController.(loadOnScroll(Account, TGScrollPosition) -&gt; ()).(closure #1):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "TextViewLabel.sizeToFit() -&gt; ():TextViewLabel.swift">
      </ContextState>
      <ContextState
         contextName = "GalleryControls.init(View?) -&gt; GalleryControls:GalleryControls.swift">
      </ContextState>
      <ContextState
         contextName = "ChatController.viewWillAppear(Bool) -&gt; ():ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #3 in PreHistorySettingsController.viewDidLoad():PreHistorySettingsController.swift">
         <PersistentStrings>
            <PersistentString
               value = "view">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatController.(openChat(account : Account, peerId : PeerId, message : Message?, tagMask : MessageTags?) -&gt; ()).(closure #3):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "CachedUserData.withUpdatedIsBlocked(Bool) -&gt; CachedUserData:CachedUserData.swift">
      </ContextState>
      <ContextState
         contextName = "APController.(init(account : Account, peerId : PeerId, message : Message?, isVoice : Bool) -&gt; APController).(closure #4):AudioPlayerController.swift">
      </ContextState>
      <ContextState
         contextName = "Window.sendEvent(NSEvent) -&gt; ():Window.swift">
      </ContextState>
      <ContextState
         contextName = "ChatListController.checkList() -&gt; ():ChatListController.swift">
      </ContextState>
      <ContextState
         contextName = "PhoneCallWindowController.(init(PCallSession) -&gt; PhoneCallWindowController).(closure #6).(closure #1):PhoneCallWindowController.swift">
      </ContextState>
      <ContextState
         contextName = "TableView.apply(transition : TableTransition) -&gt; ():TableView.swift">
      </ContextState>
      <ContextState
         contextName = "ChatControllerView.(init(frame : CGRect, chatInteraction : ChatInteraction, account : Account) -&gt; ChatControllerView).(closure #7):ChatController.swift">
      </ContextState>
      <ContextState
         contextName = "proccessEntries&lt;A, B where ...&gt; ([B]?, right : [B], (B) -&gt; A) -&gt; ([Int], [(Int, A, Int?)], [(Int, A, Int)]):System.swift">
      </ContextState>
      <ContextState
         contextName = "GridNode.applyPresentaionLayout(GridNodePresentationLayout) -&gt; ():GridNode.swift">
      </ContextState>
      <ContextState
         contextName = "telegramUpdateTheme(TelegramPresentationTheme, window : Window) -&gt; ():Appearance.swift">
         <PersistentStrings>
            <PersistentString
               value = "window.contentView">
            </PersistentString>
            <PersistentString
               value = "window.contentView?.subviews">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "chatMessageFileDatas(account:file:pathExtension:progressive:justThumbail:):MediaUtils.swift">
      </ContextState>
      <ContextState
         contextName = "__48-[TGOpusAudioRecorder prepareRecord:completion:]_block_invoke:TGOpusAudioRecorder.m">
      </ContextState>
      <ContextState
         contextName = "SearchView.changeState(Bool) -&gt; ():SearchView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.animateContainer.frame">
            </PersistentString>
            <PersistentString
               value = "leftInset">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(currentAccount(manager : AccountManager, appGroupPath : String, testingEnvironment : Bool) -&gt; Signal&lt;Either&lt;UnauthorizedAccount, Account&gt;?, ()&gt;).(closure #2).(closure #1).(closure #1).(closure #1):AccountManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "account">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatRowView.setFrameSize(CGSize) -&gt; ():ChatRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MutableChatListView.init(earlier : MutableChatListEntry?, entries : [MutableChatListEntry], later : MutableChatListEntry?, count : Int) -&gt; MutableChatListView:ChatListView.swift">
      </ContextState>
      <ContextState
         contextName = "messageEntries([MessageHistoryEntry], maxReadIndex : MessageIndex?, dayGrouping : Bool, includeEmpty : Bool) -&gt; [ChatHistoryEntry]:System.swift">
      </ContextState>
      <ContextState
         contextName = "TableView.(viewDidMoveToSuperview() -&gt; ()).(closure #1):TableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "strongSelf.changedRange">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatTitleBarView.inputActivities.didset:ChatTitleBarView.swift">
         <PersistentStrings>
            <PersistentString
               value = "inputActivities">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "(migrationData(accountManager : AccountManager, appGroupPath : String) -&gt; Signal&lt;ApplicationContext?, ()&gt;).(closure #1).(closure #4):ApplicationContext.swift">
      </ContextState>
      <ContextState
         contextName = "AuthorizedApplicationContext.init(window : Window, shouldOnlineKeeper : Signal&lt;Bool, ()&gt;, account : Account, accountManager : AccountManager, localization : LocalizationSettings?) -&gt; AuthorizedApplicationContext:ApplicationContext.swift">
      </ContextState>
      <ContextState
         contextName = "ChatContactRowItem.init(CGSize, ChatInteraction, Account, ChatHistoryEntry) -&gt; ChatContactRowItem:ChatContactRowItem.swift">
         <PersistentStrings>
            <PersistentString
               value = " message.media[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TokenSearchView.updateLocalizationAndTheme() -&gt; ():TokenSearchView.swift">
         <PersistentStrings>
            <PersistentString
               value = "fromView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #6 in closure #1 in SearchController.viewDidLoad():SearchController.swift">
      </ContextState>
      <ContextState
         contextName = "TGTableView.moveItem(from : Int, to : Int, changeItem : TGTableRowItem?, redraw : Bool, animation : NSTableViewAnimationOptions) -&gt; ():TGTableView.swift">
      </ContextState>
      <ContextState
         contextName = "ChatInputAccessory.isVisibility() -&gt; Bool:ChatInputAccessory.swift">
         <PersistentStrings>
            <PersistentString
               value = "forwardModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableView.scroll(to : TableScrollState, inset : EdgeInsets) -&gt; ():TableView.swift">
      </ContextState>
      <ContextState
         contextName = "MessageHistoryTable.anchorIndex(MessageId) -&gt; MessageHistoryAnchorIndex?:MessageHistoryTable.swift">
      </ContextState>
      <ContextState
         contextName = "GridRowView.layout(items : [GridItem], parent : GridRowItem, animated : Bool) -&gt; ():GridRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "parent.index">
            </PersistentString>
            <PersistentString
               value = "item.stableId">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatListController.(loadOnScroll(Account, TGTableScrollUpdate) -&gt; ()).(closure #1):ChatListController.swift">
         <PersistentStrings>
            <PersistentString
               value = "list.laterIndex">
            </PersistentString>
            <PersistentString
               value = "self.historyLoader">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MGalleryPeerPhotoItem.sizeValue.getter:MGalleryPeerPhotoItem.swift">
      </ContextState>
      <ContextState
         contextName = "__34-[TGGrowingTextView menuForEvent:]_block_invoke_2:TGModernGrowingTextView.m">
         <PersistentStrings>
            <PersistentString
               value = "item">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChatController.(viewDidLoad() -&gt; ()).(closure #4).(closure #3):ChatController.swift">
         <PersistentStrings>
            <PersistentString
               value = "previous">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GeneralInteractedRowView.setItem(item : TableRowItem, selected : Bool) -&gt; ():GeneralInteractedRowView.swift">
         <PersistentStrings>
            <PersistentString
               value = "value(item)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "StickersViewController.(init(account : Account) -&gt; StickersViewController).(closure #1):EStickersViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MGalleryPeerPhotoItem.(request(immediately : Bool) -&gt; ()).(closure #3):MGalleryPeerPhotoItem.swift">
      </ContextState>
      <ContextState
         contextName = "GeneralInputRowItem.text.didset:GeneralInputRow.swift">
         <PersistentStrings>
            <PersistentString
               value = "text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
